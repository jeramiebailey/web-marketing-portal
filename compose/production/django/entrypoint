#!/bin/sh

set -o errexit
set -o pipefail
set -o nounset

# mkdir /root/.ssh || true
# chmod 700 /root/.ssh || true
# chmod 644 /root/.ssh/id_rsa.pub || true
# chmod 600 /root/.ssh/id_rsa || true
# chmod 644 /root/.ssh/AnthonysMBP.pem || true

# N.B. If only .env files supported variable expansion...
export CELERY_BROKER_URL="${REDIS_URL}"

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
#export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
export DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB_NAME

postgres_ready() {
python << END
import sys

import psycopg2

try:
    psycopg2.connect(dbname="$POSTGRES_DB_NAME", user="$POSTGRES_USER", password="$POSTGRES_PASSWORD", host="$POSTGRES_HOST")
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)

END
}
until postgres_ready; do
  >&2 echo 'Waiting for PostgreSQL to become available...'
  sleep 1
done
>&2 echo 'PostgreSQL is available'

exec "$@"
