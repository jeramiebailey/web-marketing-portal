# Generated by Django 2.0.7 on 2019-01-29 18:05

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0004_auto_20190123_1554'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('min_word_count', models.PositiveSmallIntegerField()),
                ('milestone', models.PositiveSmallIntegerField()),
                ('price_production', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('price_distribution', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('production_notes', models.TextField(blank=True, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_update', models.DateTimeField(auto_now=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defaultOrganizationTemplate', to='organizations.Organization')),
            ],
            options={
                'verbose_name': 'Default Content Template',
                'verbose_name_plural': 'Default Content Templates',
                'permissions': (('view_articletemplate', 'View Article Template'),),
            },
        ),
        migrations.CreateModel(
            name='ContentArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('google_doc', models.URLField(blank=True, max_length=500, null=True)),
                ('live_url', models.URLField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_word_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('milestone', models.IntegerField(blank=True, null=True)),
                ('duedate_draft', models.DateField(blank=True, null=True)),
                ('duedate_clientreview', models.DateField(blank=True, null=True)),
                ('duedate_golive', models.DateField(blank=True, null=True)),
                ('price_production', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('price_distribution', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content Article',
                'verbose_name_plural': 'Content Articles',
                'permissions': (('view_contentarticle', 'View Content Article'),),
            },
        ),
        migrations.CreateModel(
            name='ContentChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('default_price', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'verbose_name': 'Content Channel',
                'verbose_name_plural': 'Content Channel',
                'permissions': (('view_contentchannel', 'View Content Channel'),),
            },
        ),
        migrations.CreateModel(
            name='ContentComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('public', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contentComment', to='content_management.ContentArticle')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contentCommentAuthor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Content Comment',
                'verbose_name_plural': 'Content Comments',
                'permissions': (('view_contentcomments', 'View Content Comments'),),
            },
        ),
        migrations.CreateModel(
            name='ContentKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('organization', models.ManyToManyField(to='organizations.Organization')),
            ],
            options={
                'verbose_name': 'Keyword',
                'verbose_name_plural': 'Keywords',
                'permissions': (('view_contentkeywords', 'View Content Keywords'),),
            },
        ),
        migrations.CreateModel(
            name='ContentStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status_type', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.PositiveSmallIntegerField(unique=True)),
                ('color', models.CharField(blank=True, default='#ffffff', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content Status',
                'verbose_name_plural': 'Content Status',
                'permissions': (('view_contentstatus', 'View Content Status'),),
            },
        ),
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('color', models.CharField(blank=True, default='#ffffff', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Content Type',
                'verbose_name_plural': 'Content Types',
                'permissions': (('view_contenttype', 'View Content Type'),),
            },
        ),
        migrations.CreateModel(
            name='OrganizationRequirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_count', models.PositiveSmallIntegerField()),
                ('press_release_count', models.PositiveSmallIntegerField()),
                ('blog_word_count', models.PositiveSmallIntegerField()),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='organizations.Organization')),
            ],
            options={
                'verbose_name': 'Organization Requirement',
                'verbose_name_plural': 'Organization Requirements',
                'permissions': (('view_organizationrequirements', 'View Organization Requirements'),),
            },
        ),
        migrations.CreateModel(
            name='PlanningTemplateOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_order_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=[], null=True, size=None)),
            ],
            options={
                'verbose_name': 'Planning Template',
                'verbose_name_plural': 'Planning Templates',
                'permissions': (('view_planningtemplateorder', 'View Planning Template Order'),),
            },
        ),
        migrations.CreateModel(
            name='PlanningYearMonth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2017), django.core.validators.MaxValueValidator(2050)])),
                ('month', models.PositiveSmallIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
                ('default_milestone_one', models.DateField(blank=True, null=True)),
                ('default_milestone_two', models.DateField(blank=True, null=True)),
                ('article_order_array', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=[], null=True, size=None)),
                ('default_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content_management.ContentStatus')),
            ],
            options={
                'verbose_name': 'Planning Month',
                'verbose_name_plural': 'Planning Months',
                'permissions': (('view_planningyearmonth', 'View Planning Year Month'),),
            },
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Writer',
                'verbose_name_plural': 'Writers',
                'permissions': (('view_writer', 'View Writer'),),
            },
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='channels',
            field=models.ManyToManyField(to='content_management.ContentChannel'),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contentClient', to='organizations.Organization'),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contentType', to='content_management.ContentType'),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='editor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contentEditor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='final_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contentApprover', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='keywords',
            field=models.ManyToManyField(to='content_management.ContentKeywords'),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='planning_year_month',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contentArticle', to='content_management.PlanningYearMonth'),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contentStatus', to='content_management.ContentStatus'),
        ),
        migrations.AddField(
            model_name='contentarticle',
            name='writer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contentWriter', to='content_management.Writer'),
        ),
        migrations.AddField(
            model_name='articletemplate',
            name='content_channels',
            field=models.ManyToManyField(to='content_management.ContentChannel'),
        ),
        migrations.AddField(
            model_name='articletemplate',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defaultContentType', to='content_management.ContentType'),
        ),
        migrations.AddField(
            model_name='articletemplate',
            name='editor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defaultEditor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articletemplate',
            name='final_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defaultApprover', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articletemplate',
            name='writer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defaultWriter', to='content_management.Writer'),
        ),
        migrations.AlterUniqueTogether(
            name='planningyearmonth',
            unique_together={('year', 'month')},
        ),
    ]
